<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Ikp_model extends CI_Model
{
    var $_table = 'ikp';

    var $table = 'ikp m';
    var $column_order = array('m.no', 'm.lanjutan_no','m.tanggal_terbit','m.nama_pelaksana','m.perusahaan','m.jumlah_pekerja','m.lokasi','m.izin_diperlukan','h.status'); //set column field database for datatable orderable
    var $column_search = array('m.no', 'm.lanjutan_no','m.tanggal_terbit','m.nama_pelaksana','m.perusahaan','m.jumlah_pekerja','m.lokasi','m.izin_diperlukan','h.status'); //set column field database for datatable searchable
    var $order = array('m.no' => 'asc'); // default order

    public function __construct()
    {
        parent::__construct();
    }

    private function _get_datatables_query($param='')
    {
        $this->db->order_by('m.no', 'desc');
        $this->db->select('m.*,h.status');
        $this->db->from($this->table);
        $this->db->join('hira h','h.no=m.id_hira','inner');
        if (!empty(@$param['id_user'])){
            $this->db->where('h.id_user',$param['id_user']);
        }
    
        $i = 0;
        foreach ($this->column_search as $item) // loop column
        {
            if($_POST['search']['value']) // if datatable send POST for search
            {

                if($i===0) // first loop
                {
                    $this->db->group_start(); // open bracket. query Where with OR clause better with bracket. because maybe can combine with other WHERE with AND.
                    $this->db->like($item, $_POST['search']['value']);
                }
                else
                {
                    $this->db->or_like($item, $_POST['search']['value']);
                }

                if(count($this->column_search) - 1 == $i) //last loop
                    $this->db->group_end(); //close bracket
            }
            $i++;
        }

        if(isset($_POST['order'])) // here order processing
        {
            $this->db->order_by($this->column_order[$_POST['order']['0']['column']], $_POST['order']['0']['dir']);
        }
        else if(isset($this->order))
        {
            $order = $this->order;
            $this->db->order_by(key($order), $order[key($order)]);
        }
    }
    function get_datatables($param='')
    {
        $this->_get_datatables_query($param);
        if($_POST['length'] != -1)
        $this->db->limit($_POST['length'], $_POST['start']);
        $query = $this->db->get();
        return $query->result();
    }

    function count_filtered($param='')
    {
        $this->_get_datatables_query($param);
        $query = $this->db->get();
        return $query->num_rows();
    }

    public function count_all($param='')
    {
        $this->db->order_by('m.no', 'desc');
        $this->db->select('m.*,h.status');
        $this->db->from($this->table);
        $this->db->join('hira h','h.no=m.id_hira','inner');
        if (!empty(@$param['id_user'])){
            $this->db->where('h.id_user',$param['id_user']);
        }
        return $this->db->count_all_results();
    }
    
    /*
     * Get ikp by no
     */
    function get_ikp($no)
    {
        return $this->db->get_where('ikp',array('no'=>$no))->row_array();
    }
    function get_ikp_full($no){
        return $this->db->select('i.*')->from('ikp i')->join('hira h','h.no=i.id_hira','inner')->where('i.no',$no)->get();
    }
    function get_ikp_full_by_hira($hira){
        return $this->db->select('i.*,h.date_mulai,h.date_selesai,h.tools,h.ringkasan_pek')->from('ikp i')->join('hira h','h.no=i.id_hira','right')->where('h.no',$hira)->get();
    }
        
    /*
     * Get all ikp
     */
    function get_all_ikp()
    {
        $this->db->order_by('d.no', 'desc');
        $this->db->select('d.*,h.status');
        $this->db->from('ikp d')
            ->join('hira h','h.no=d.id_hira','inner');
        return $this->db->get()->result_array();
    }
        
    /*
     * function to add new ikp
     */
    function add_ikp($params)
    {
        $params['no'] = $this->generate_id();
        $this->db->insert('ikp',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update ikp
     */
    function update_ikp($no,$params)
    {
        $this->db->where('no',$no);
        return $this->db->update('ikp',$params);
    }
    
    /*
     * function to delete ikp
     */
    function delete_ikp($no)
    {
        return $this->db->delete('ikp',array('no'=>$no));
    }
    public function generate_id(){
        $tabel = 'ikp';
        $kolom = 'no';
        $lebar = 7;
        $awalan = 'IKP-EJA';
        if(empty($awalan)){
            $query="select $kolom from $tabel order by $kolom desc limit 1";
        }else{
            $query="select $kolom from $tabel where $kolom like '%$awalan%' order by $kolom desc limit 1";
        }
        $hasil          = $this->db->query($query)->row();
        $jumlahrecord   = count($hasil);
        if($jumlahrecord == 0)
            $nomor=1;
        else
        {
            $row=$hasil;
            $nomor=intval(substr($row->$kolom,strlen($awalan)))+1;
        }
        if($lebar>0){
            $angka = $awalan.str_pad($nomor,$lebar,"0",STR_PAD_LEFT);
        }else{
            $angka = $awalan.$nomor;
        }
            
        return $angka;
    }
}
